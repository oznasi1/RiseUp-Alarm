<!--
  ~ Copyright 2017 Phillip Hsu
  ~
  ~ This file is part of ClockPlus.
  ~
  ~ ClockPlus is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ ClockPlus is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with ClockPlus.  If not, see <http://www.gnu.org/licenses/>.
  -->

<resources>
    <style name="GridLayoutNumpadElement">
        <!-- http://stackoverflow.com/a/6868308/5055032
         Leave off the namespace to reference a custom attribute.
         Here, we are referencing the "grid:" namespace -->
        <item name="layout_columnWeight">1</item>
        <!--<item name="layout_rowWeight">1</item>-->
        <item name="android:layout_height">@dimen/numeric_keypad_cell_height</item>
        <item name="android:background">?android:attr/selectableItemBackgroundBorderless</item>
        <item name="android:gravity">center</item>
    </style>

    <style name="AppTheme" parent="BaseAppTheme.Light">
        <item name="android:navigationBarColor">?attr/colorPrimaryDark</item>
        <item name="android:alertDialogTheme">@style/AlertDialogStyle</item>
        <item name="android:timePickerDialogTheme">@style/TimePickerDialogTheme</item>
    </style>
    <style name="AppTheme.Dark" parent="BaseAppTheme.Dark">
        <item name="android:navigationBarColor">?attr/colorPrimaryDark</item>
        <item name="android:alertDialogTheme">@style/AlertDialogStyle.Dark</item>
        <item name="android:timePickerDialogTheme">@style/TimePickerDialogTheme.Dark</item>
    </style>
    <style name="AppTheme.Black" parent="BaseAppTheme.Black">
        <item name="android:navigationBarColor">?attr/colorPrimaryDark</item>
        <item name="android:alertDialogTheme">@style/AlertDialogStyle.Black</item>
        <item name="android:timePickerDialogTheme">@style/TimePickerDialogTheme.Black</item>
    </style>

    <style name="AlertDialogStyle" parent="android:Theme.Material.Dialog.Alert">
        <item name="android:colorAccent">@color/colorAccent</item>
        <item name="android:background">@color/alert_dialog_background_color</item>
    </style>
    <style name="AlertDialogStyle.Dark" parent="android:Theme.Material.Dialog.Alert">
        <item name="android:colorAccent">@color/colorAccentInverse</item>
        <item name="android:background">@color/alert_dialog_background_color_inverse</item>
    </style>
    <style name="AlertDialogStyle.Black">
        <item name="android:colorAccent">@color/colorAccentBlack</item>
        <item name="android:background">@color/alert_dialog_background_color_black</item>
    </style>

    <style name="TimePickerDialogTheme" parent="android:Theme.Material.Light.Dialog">
        <!--
          ~ Why didn't we just extend from AlertDialogStyle to get these properties?
          ~ (1) We require a different parent theme.
          ~ (2) We could extend from AlertDialogStyle and then attempt to style the header's
          ~     time text appearance, but that won't work; as of 9/28/2016,
          ~     the attribute headerSelectedTextColor cannot be referenced at all.
          ~     The rest of the header's text style seem to be changeable, using the
          ~     headerTimeTextAppearance and headerAmPmTextAppearance attributes,
          ~     but that's a lot of needless work.
        -->
        <item name="android:colorAccent">@color/colorAccent</item>
        <item name="android:background">@color/alert_dialog_background_color</item>
        <item name="android:timePickerStyle">@style/TimePickerDialogStyle</item>
    </style>
    <style name="TimePickerDialogTheme.Dark">
        <item name="android:colorAccent">@color/colorAccentInverse</item>
        <item name="android:background">@color/alert_dialog_background_color_inverse</item>
        <item name="android:timePickerStyle">@style/TimePickerDialogStyle.Dark</item>
    </style>
    <style name="TimePickerDialogTheme.Black">
        <item name="android:colorAccent">@color/colorAccentBlack</item>
        <item name="android:background">@color/alert_dialog_background_color_black</item>
        <item name="android:timePickerStyle">@style/TimePickerDialogStyle.Black</item>
    </style>
    <style name="TimePickerDialogStyle" parent="@android:style/Widget.Material.Light.TimePicker">
        <!--https://android.googlesource.com/platform/frameworks/base/+/lollipop-release/core/res/res/values/styles_material.xml-->
        <item name="android:headerBackground">@color/alert_dialog_background_color</item>
        <item name="android:numbersBackgroundColor">@color/alert_dialog_background_color</item>
        <item name="android:numbersTextColor">@color/text_color_primary_dark</item>
        <item name="android:numbersInnerTextColor">@color/text_color_primary_dark</item>
    </style>
    <style name="TimePickerDialogStyle.Dark">
        <item name="android:headerBackground">@color/alert_dialog_background_color_inverse</item>
        <item name="android:numbersBackgroundColor">@color/alert_dialog_background_color_inverse</item>
        <item name="android:numbersTextColor">@color/text_color_primary_dark</item>
        <item name="android:numbersInnerTextColor">@color/text_color_primary_dark</item>
    </style>
    <style name="TimePickerDialogStyle.Black">
        <item name="android:headerBackground">@color/alert_dialog_background_color_black</item>
        <item name="android:numbersBackgroundColor">@color/alert_dialog_background_color_black</item>
        <item name="android:numbersTextColor">@color/text_color_primary_dark</item>
        <item name="android:numbersInnerTextColor">@color/text_color_primary_dark</item>
    </style>

    <style name="SelectableButton">
        <item name="android:background">?selectableItemBackgroundBorderless</item>
    </style>

</resources>
