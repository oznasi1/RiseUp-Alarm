<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2017 Phillip Hsu
  ~
  ~ This file is part of ClockPlus.
  ~
  ~ ClockPlus is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ ClockPlus is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with ClockPlus.  If not, see <http://www.gnu.org/licenses/>.
  -->

<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    tools:context=".timers.EditTimerActivity">
    
    <RelativeLayout
        android:id="@+id/edit_fields_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="?attr/colorPrimary"
        android:layout_alignParentTop="true"
        android:paddingBottom="16dp">

        <android.support.v7.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:popupTheme="?themedPopupOverlay"
            app:contentInsetStart="72dp"
            android:layout_alignParentTop="true">

            <!--Unfortunately, we can't use a style that extends from BaseLabel
            because we want the parent to be `TextAppearance.AppCompat.Title`, whereas
            BaseLabel's parent is `TextAppearance.AppCompat`. We have duplicate attributes,
            but this is fine since this is the only view that is styled like this.-->
            <TextView
                android:id="@+id/label"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="?android:attr/selectableItemBackground"
                style="@style/TextAppearance.Widget.AppCompat.Toolbar.Title"
                android:hint="@string/label"
                android:maxLines="1"
                android:ellipsize="end"/>

        </android.support.v7.widget.Toolbar>

        <LinearLayout
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            android:layout_centerHorizontal="true"
            android:layout_below="@id/toolbar">

            <EditText
                android:id="@+id/hour"
                style="@style/TimerText.EditField"/>

            <TextView
                android:id="@+id/hour_label"
                android:text="h"
                style="@style/TimerText.FieldLabel"/>

            <EditText
                android:id="@+id/minute"
                style="@style/TimerText.EditField"/>

            <TextView
                android:id="@+id/minute_label"
                android:text="m"
                style="@style/TimerText.FieldLabel"/>

            <EditText
                android:id="@+id/second"
                style="@style/TimerText.EditField"/>

            <TextView
                android:id="@+id/second_label"
                android:text="s"
                style="@style/TimerText.FieldLabel"/>

            <View
                android:id="@+id/focus_grabber"
                style="@style/FocusGrabber"/>

        </LinearLayout>
        
    </RelativeLayout>

    <!-- When fab.hide() is called, it is gone from the layout.
    The numpad is anchored in between the fab and the appbar,
    so if the fab is gone, the numpad won't be constrained
    above the fab anymore. This placeholder takes up the same
    height as the fab and is always present in the layout,
    so we can hide() the fab without losing the bottom anchoring
    on the numpad. -->
    <!-- TODO: Use 56dp height for v21. Consider writing
     a dimen resource for this and make different dimen version files,
      and/or a style resource and make different style version files. -->
    <!--<Space
        android:id="@+id/fab_placeholder"
        android:layout_width="0dp"
        android:layout_height="88dp"
        android:layout_alignParentBottom="true"
        android:layout_centerHorizontal="true"/>-->

    <android.support.design.widget.FloatingActionButton
        android:id="@+id/fab"
        android:layout_centerHorizontal="true"
        android:layout_alignParentBottom="true"
        style="@style/TimerFab"/>

    <!-- We don't really need the overhead of the GridLayoutNumpad,
     because it would be a major hassle to adapt it for timers. -->
    <!-- We're borrowing the margins for bottom sheets, since this numpad
    was "borrowed" from the bottom sheet numpad anyway. -->
    <android.support.v7.widget.GridLayout
        android:id="@+id/numpad"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_below="@id/edit_fields_layout"
        android:layout_above="@id/fab"
        android:layout_marginTop="@dimen/bottom_sheet_vertical_space"
        android:layout_marginStart="@dimen/bottom_sheet_edge_margin"
        android:layout_marginEnd="@dimen/bottom_sheet_edge_margin"
        app:columnCount="3">

        <!--We require the buttons' heights to be weighted, so we can't
        reuse the GridLayoutNumpadButton style used by the bottom
        sheet numpad.-->
        <Button
            android:id="@+id/one"
            style="@style/GridLayoutTimerNumpadButton"
            android:text="1"/>

        <Button
            android:id="@+id/two"
            style="@style/GridLayoutTimerNumpadButton"
            android:text="2"/>

        <Button
            android:id="@+id/three"
            style="@style/GridLayoutTimerNumpadButton"
            android:text="3"/>

        <Button
            android:id="@+id/four"
            style="@style/GridLayoutTimerNumpadButton"
            android:text="4"/>

        <Button
            android:id="@+id/five"
            style="@style/GridLayoutTimerNumpadButton"
            android:text="5"/>

        <Button
            android:id="@+id/six"
            style="@style/GridLayoutTimerNumpadButton"
            android:text="6"/>

        <Button
            android:id="@+id/seven"
            style="@style/GridLayoutTimerNumpadButton"
            android:text="7"/>

        <Button
            android:id="@+id/eight"
            style="@style/GridLayoutTimerNumpadButton"
            android:text="8"/>

        <Button
            android:id="@+id/nine"
            style="@style/GridLayoutTimerNumpadButton"
            android:text="9"/>

        <Button
            android:id="@+id/zero"
            style="@style/GridLayoutTimerNumpadButton"
            app:layout_column="1"
            android:text="0"/>

        <!--GridLayoutTimerNumpadButton has text attributes.. but using it
        is a simple way to get the weighted height. I'd rather not define a
        new style based on GridLayoutNumpadElement just for this... -->
        <ImageButton
            android:id="@+id/backspace"
            android:src="@drawable/ic_backspace_24dp"
            style="@style/GridLayoutTimerNumpadButton"
            app:layout_column="2"
            android:tint="?attr/themedIconTint"/>

    </android.support.v7.widget.GridLayout>

</RelativeLayout>
